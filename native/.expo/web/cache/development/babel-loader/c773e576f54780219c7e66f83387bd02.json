{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      _ref$userName = _ref.userName,\n      userName = _ref$userName === void 0 ? \"\" : _ref$userName,\n      _ref$email = _ref.email,\n      email = _ref$email === void 0 ? \"\" : _ref$email,\n      _ref$password = _ref.password,\n      password = _ref$password === void 0 ? \"\" : _ref$password,\n      _ref$passwordConfirma = _ref.passwordConfirmation,\n      passwordConfirmation = _ref$passwordConfirma === void 0 ? \"\" : _ref$passwordConfirma;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      userName: userName,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    },\n    validationSchema: Yup.object({\n      userName: Yup.string().min(4, \"Debe tener al menos 4 caracteres\").max(50, \"Debe tener 50 caracteres o menos\").required(\"Debes completar este campo\"),\n      email: Yup.string().email(\"Introduzca un email valido por favor\").required(\"Debes completar este campo\"),\n      password: Yup.string().required(\"Please Enter your password\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\").required(\"Password confirm is required\")\n    }),\n    onSubmit: function _callee(values, _ref2) {\n      var setSubmitting, resetForm;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(dispatch(createUser(values)));\n\n            case 4:\n              resetForm({});\n              setStatus({\n                success: true\n              });\n              _context.next = 13;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              setStatus({\n                success: false\n              });\n              setSubmitting(false);\n              setErrors({\n                submit: _context.t0.message\n              });\n\n            case 13:\n              resetForm(initialValues);\n              setSubmitting(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        handleReset = _ref3.handleReset,\n        setFieldValue = _ref3.setFieldValue,\n        values = _ref3.values,\n        handleBlur = _ref3.handleBlur,\n        isSubmitting = _ref3.isSubmitting,\n        status = _ref3.status,\n        errors = _ref3.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, React.createElement(Form, {\n      loading: isSubmitting,\n      success: !!status && !!status.success,\n      error: !!errors.submit,\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      name: \"userName\",\n      placeholder: \"userName\",\n      onChangeText: handleChange(\"userName\"),\n      onBlur: handleBlur(\"userName\"),\n      style: styles.textInput,\n      value: values.userName || \"\",\n      keyboardType: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), errors.name && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"email\",\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      style: styles.textInput,\n      value: values.email || \"\",\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, errors.email), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      style: styles.textInput,\n      value: values.password || \"\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, errors.password), React.createElement(TextInput, {\n      name: \"passwordConfirmation\",\n      placeholder: \"Confirm password\",\n      onChangeText: handleChange(\"passwordConfirmation\"),\n      onBlur: handleBlur(\"passwordConfirmation\"),\n      style: styles.textInput,\n      value: values.passwordConfirmation,\n      secureTextEntry: true,\n      setFieldValue: setFieldValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), errors.passwordConfirmation && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, errors.passwordConfirmation), React.createElement(Button, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    })));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\"\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","Yup","useDispatch","createUser","Register","id","userName","email","password","passwordConfirmation","dispatch","styles","loginContainer","object","string","min","max","required","matches","oneOf","ref","values","setSubmitting","resetForm","setStatus","success","setErrors","submit","message","initialValues","handleChange","handleSubmit","handleReset","setFieldValue","handleBlur","isSubmitting","status","errors","textInput","name","fontSize","color","StyleSheet","create","width","alignItems","backgroundColor","padding","elevation","height","margin","borderColor","borderWidth","hairlineWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TextInput,\n  Button,\n  SafeAreaView,\n} from \"react-native\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport * as Yup from \"yup\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { createUser } from \"../store/actions/userActions\";\n\nconst Register = ({\n  id,\n  userName = \"\",\n  email = \"\",\n  password = \"\",\n  passwordConfirmation = \"\",\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.loginContainer}>\n      <Formik\n        initialValues={{\n          userName,\n          email,\n          password,\n          passwordConfirmation,\n        }}\n        validationSchema={Yup.object({\n          userName: Yup.string()\n            .min(4, \"Debe tener al menos 4 caracteres\")\n            .max(50, \"Debe tener 50 caracteres o menos\")\n            .required(\"Debes completar este campo\"),\n          email: Yup.string()\n            .email(\"Introduzca un email valido por favor\")\n            .required(\"Debes completar este campo\"),\n          password: Yup.string()\n            .required(\"Please Enter your password\")\n            .matches(\n              /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n              \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n            ),\n          passwordConfirmation: Yup.string()\n            .oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\")\n            .required(\"Password confirm is required\"),\n        })}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          try {\n            await dispatch(createUser(values));\n            resetForm({})\n            setStatus({success: true})\n          } catch (error) {\n            setStatus({success: false})\n            setSubmitting(false)\n            setErrors({submit: error.message})\n          }\n          \n          resetForm(initialValues);\n          setSubmitting(false);\n        }}\n      >\n        {({\n          handleChange,\n          handleSubmit,\n          handleReset,\n          setFieldValue,\n          values,\n          handleBlur,\n          isSubmitting,\n          status,\n          errors,\n        }) => (\n          <View>\n            <Form\n              loading={isSubmitting}\n              success={!!status && !!status.success}\n              error={!!errors.submit}\n              onSubmit={handleSubmit}\n            >\n              <TextInput\n                name=\"userName\"\n                placeholder=\"userName\"\n                onChangeText={handleChange(\"userName\")}\n                onBlur={handleBlur(\"userName\")}\n                style={styles.textInput}\n                value={values.userName || \"\"}\n                keyboardType=\"text\"\n              />\n              {errors.name && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.name}\n                </Text>\n              )}\n              <TextInput\n                name=\"email\"\n                placeholder=\"email\"\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                style={styles.textInput}\n                value={values.email || \"\"}\n                keyboardType=\"email-address\"\n              />\n              {errors.email && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.email}\n                </Text>\n              )}\n              <TextInput\n                name=\"password\"\n                placeholder=\"Password\"\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                style={styles.textInput}\n                value={values.password || \"\"}\n                secureTextEntry={true}\n              />\n              {errors.password && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.password}\n                </Text>\n              )}\n              <TextInput\n                name=\"passwordConfirmation\"\n                placeholder=\"Confirm password\"\n                onChangeText={handleChange(\"passwordConfirmation\")}\n                onBlur={handleBlur(\"passwordConfirmation\")}\n                style={styles.textInput}\n                value={values.passwordConfirmation}\n                secureTextEntry={true}\n                setFieldValue={setFieldValue}\n              />\n              {errors.passwordConfirmation && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.passwordConfirmation}\n                </Text>\n              )}\n              <Button\n                type=\"submit\"\n              />\n            </Form>\n          </View>\n        )}\n      </Formik>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\",\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10,\n  },\n});\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}