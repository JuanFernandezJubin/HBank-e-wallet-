{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\components\\\\CustomInput.js\";\n\nimport React, { memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from \"../core/theme\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var errorText = _ref.errorText,\n      props = _objectWithoutProperties(_ref, [\"errorText\"]);\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, React.createElement(Input, _extends({\n    style: styles.input,\n    selectionColor: theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  })), errorText ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }, errorText) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12\n  },\n  input: {\n    backgroundColor: theme.colors.surface\n  },\n  error: {\n    fontSize: 14,\n    color: theme.colors.error,\n    paddingHorizontal: 4,\n    paddingTop: 4\n  }\n});\nexport default memo(CustomInput);","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/components/CustomInput.js"],"names":["React","memo","TextInput","Input","theme","CustomInput","errorText","props","styles","container","input","colors","primary","error","StyleSheet","create","width","marginVertical","backgroundColor","surface","fontSize","color","paddingHorizontal","paddingTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAiBC,KAAjB;;AAAA,SAClB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,cAAc,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAF/B;AAGE,IAAA,cAAc,EAAC,aAHjB;AAIE,IAAA,IAAI,EAAC;AAJP,KAKML,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQGD,SAAS,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BP,SAA5B,CAAH,GAAmD,IAR/D,CADkB;AAAA,CAApB;;AAaA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,eAAe,EAAEd,KAAK,CAACO,MAAN,CAAaQ;AADzB,GALwB;AAQ/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAEjB,KAAK,CAACO,MAAN,CAAaE,KAFf;AAGLS,IAAAA,iBAAiB,EAAE,CAHd;AAILC,IAAAA,UAAU,EAAE;AAJP;AARwB,CAAlB,CAAf;AAgBA,eAAetB,IAAI,CAACI,WAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from '../core/theme';\n\nconst CustomInput = ({ errorText, ...props }) => (\n  <View style={styles.container}>\n    <Input\n      style={styles.input}\n      selectionColor={theme.colors.primary}\n      underlineColor=\"transparent\"\n      mode=\"outlined\"\n      {...props}\n    />\n    {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n  },\n  error: {\n    fontSize: 14,\n    color: theme.colors.error,\n    paddingHorizontal: 4,\n    paddingTop: 4,\n  },\n});\n\nexport default memo(CustomInput);\n"]},"metadata":{},"sourceType":"module"}