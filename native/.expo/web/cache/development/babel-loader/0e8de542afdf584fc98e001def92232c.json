{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      email = _ref.email,\n      password = _ref.password,\n      passwordConfirmation = _ref.passwordConfirmation;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    },\n    onSubmit: function _callee(values, _ref2) {\n      var setSubmitting, resetForm;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n              dispatch(createUser(values)).then(function (response) {\n                resetForm();\n                setSubmitting(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        handleBlur = _ref3.handleBlur,\n        errors = _ref3.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      name: \"name\",\n      placeholder: \"name\",\n      onChangeText: handleChange(\"name\"),\n      onBlur: handleBlur(\"name\"),\n      style: styles.textInput,\n      value: values.name,\n      keyboardType: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), errors.name && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, errors.name), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"email\",\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      style: styles.textInput,\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, errors.email), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      style: styles.textInput,\n      value: values.password,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, errors.password), React.createElement(TextInput, {\n      name: \"passwordConfirmation\",\n      placeholder: \"Confirm password\",\n      onChangeText: handleChange(\"passwordConfirmation\"),\n      onBlur: handleBlur(\"passwordConfirmation\"),\n      style: styles.textInput,\n      value: values.passwordConfirmation,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), errors.passwordConfirmation && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, errors.passwordConfirmation), React.createElement(Button, {\n      secureTextEntry: true,\n      title: \"Register\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\"\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","Yup","useDispatch","createUser","Register","id","name","email","password","passwordConfirmation","dispatch","styles","loginContainer","values","setSubmitting","resetForm","then","response","handleChange","handleSubmit","handleBlur","errors","textInput","fontSize","color","StyleSheet","create","width","alignItems","backgroundColor","padding","elevation","height","margin","borderColor","borderWidth","hairlineWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TextInput,\n  Button,\n  SafeAreaView,\n} from \"react-native\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport * as Yup from \"yup\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { createUser } from \"../store/actions/userActions\";\n\nconst Register = ({ id, name, email, password,passwordConfirmation }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.loginContainer}>\n      <Formik\n        initialValues={{\n          name,\n          email,\n          password,\n          passwordConfirmation\n        }}\n\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          dispatch(createUser(values)).then((response) => {\n            resetForm();\n            setSubmitting(false);\n          });\n        }}\n      >\n        {({ handleChange, handleSubmit, values, handleBlur, errors }) => (\n          <View>\n            <TextInput\n              name=\"name\"\n              placeholder=\"name\"\n              onChangeText={handleChange(\"name\")}\n              onBlur={handleBlur(\"name\")}\n              style={styles.textInput}\n              value={values.name}\n              keyboardType=\"text\"\n            />\n            {errors.name && (\n              <Text style={{ fontSize: 10, color: \"red\" }}>{errors.name}</Text>\n            )}\n            <TextInput\n              name=\"email\"\n              placeholder=\"email\"\n              onChangeText={handleChange(\"email\")}\n              onBlur={handleBlur(\"email\")}\n              style={styles.textInput}\n              value={values.email}\n              keyboardType=\"email-address\"\n            />\n            {errors.email && (\n              <Text style={{ fontSize: 10, color: \"red\" }}>{errors.email}</Text>\n            )}\n            <TextInput\n              name=\"password\"\n              placeholder=\"Password\"\n              onChangeText={handleChange(\"password\")}\n              onBlur={handleBlur(\"password\")}\n              style={styles.textInput}\n              value={values.password}\n              secureTextEntry={true}\n            />\n            {errors.password && (\n              <Text style={{ fontSize: 10, color: \"red\" }}>\n                {errors.password}\n              </Text>\n            )}\n            <TextInput\n              name=\"passwordConfirmation\"\n              placeholder=\"Confirm password\"\n              onChangeText={handleChange(\"passwordConfirmation\")}\n              onBlur={handleBlur(\"passwordConfirmation\")}\n              style={styles.textInput}\n              value={values.passwordConfirmation}\n              secureTextEntry={true}\n            />\n            {errors.passwordConfirmation && (\n              <Text style={{ fontSize: 10, color: \"red\" }}>\n                {errors.passwordConfirmation}\n              </Text>\n            )}\n            <Button\n              secureTextEntry={true}\n              title=\"Register\"\n              onPress={handleSubmit}\n            />\n          </View>\n        )}\n      </Formik>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\",\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10,\n  },\n});\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}