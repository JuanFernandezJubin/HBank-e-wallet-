{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      email = _ref.email,\n      password = _ref.password;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: email,\n      password: password\n    },\n    onSubmit: function _callee(values, _ref2) {\n      var setSubmitting, resetForm;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n              dispatch(createUser(values)).then(function (response) {\n                resetForm();\n                setSubmitting(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"email\",\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  scrollView: {\n    backgroundColor: \"white\",\n    marginHorizontal: 20\n  },\n  text: {\n    fontSize: 42\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    userP: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createUSerP: function createUSerP(user) {\n      return dispatch(createUser(user));\n    }\n  };\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","useDispatch","createUser","Register","id","email","password","dispatch","values","setSubmitting","resetForm","then","response","isSubmitting","height","borderColor","borderWidth","styles","StyleSheet","create","container","flex","marginTop","scrollView","backgroundColor","marginHorizontal","text","fontSize","mapStateToProps","state","userP","users","mapDispatchToProps","createUSerP","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA1BC,EAA0B,QAA1BA,EAA0B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5C,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAGA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbI,MAAAA,KAAK,EAALA,KADa;AAEbC,MAAAA,QAAQ,EAARA;AAFa,KADjB;AAKE,IAAA,QAAQ,EAAE,iBAAOE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,cAAAA,aAAjB,SAAiBA,aAAjB,EAAgCC,SAAhC,SAAgCA,SAAhC;AACRH,cAAAA,QAAQ,CAACL,UAAU,CAACM,MAAD,CAAX,CAAR,CAA6BG,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC9CF,gBAAAA,SAAS;AACTD,gBAAAA,aAAa,CAAC,KAAD,CAAb;AACD,eAHD;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG;AAAA,QAAGI,YAAH,SAAGA,YAAH;AAAA,WACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACA,MAAA,WAAW,EAAC,OADZ;AAEA,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,WAAW,EAAE,MAA3B;AAAmCC,QAAAA,WAAW,EAAE;AAAhD,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH;AAAA,GAZH,CADF,CADF;AAyBD,CA7BD;;AA+BA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAE;AAFF,GADoB;AAK/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE,OADP;AAEVC,IAAAA,gBAAgB,EAAE;AAFR,GALmB;AAS/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AATyB,CAAlB,CAAf;;AAcA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE;AADR,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BzB,QAA5B,EAAsC;AACpC,SAAO;AACL0B,IAAAA,WAAW,EAAE,qBAACC,IAAD;AAAA,aAAU3B,QAAQ,CAACL,UAAU,CAACgC,IAAD,CAAX,CAAlB;AAAA;AADR,GAAP;AAGD;;AAED,eAAe/B,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TextInput,\n  Button,\n  SafeAreaView,\n} from \"react-native\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { createUser } from \"../store/actions/userActions\";\n\nconst Register = ({ id, email, password }) => {\n  const dispatch = useDispatch();\n\n\n  return (\n    <View>\n      <Formik\n        initialValues={{\n          email,\n          password,\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          dispatch(createUser(values)).then((response) => {\n            resetForm();\n            setSubmitting(false);\n          });\n        }}\n      >\n        {({ isSubmitting }) => (\n            <View>\n                <TextInput\n                placeholder=\"email\"\n                style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\n                />\n            </View>\n        )}\n      </Formik>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n  },\n  scrollView: {\n    backgroundColor: \"white\",\n    marginHorizontal: 20,\n  },\n  text: {\n    fontSize: 42,\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    userP: state.users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createUSerP: (user) => dispatch(createUser(user)),\n  };\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}