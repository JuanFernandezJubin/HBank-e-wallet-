{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from \"formik\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      userName = _ref.userName,\n      email = _ref.email,\n      password = _ref.password,\n      passwordConfirmation = _ref.passwordConfirmation,\n      isValid = _ref.isValid,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }), React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    },\n    validationSchema: Yup.object({\n      userName: Yup.string().min(4, \"Debe tener al menos 4 caracteres\").max(50, \"Debe tener 50 caracteres o menos\").required(\"Debes completar este campo\"),\n      email: Yup.string().email(\"Introduzca un email valido por favor\").required(\"Debes completar este campo\"),\n      password: Yup.string().required(\"Please Enter your password\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\").required(\"Password confirm is required\")\n    }),\n    onSubmit: function onSubmit(values, action) {\n      action.resetForm();\n      dispatch(createUser(values)).then(function (response) {\n        navigation.navigate('RegisterModal');\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"userName\",\n      onChangeText: handleChange(\"userName\"),\n      style: styles.textInput,\n      value: values.userName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), errors.name && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"email\",\n      onChangeText: handleChange(\"email\"),\n      style: styles.textInput,\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, errors.email), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      onChangeText: handleChange(\"password\"),\n      style: styles.textInput,\n      value: values.password,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, errors.password), React.createElement(TextInput, {\n      name: \"passwordConfirmation\",\n      placeholder: \"Confirm password\",\n      onChangeText: handleChange(\"passwordConfirmation\"),\n      style: styles.textInput,\n      value: values.passwordConfirmation,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), errors.passwordConfirmation && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, errors.passwordConfirmation), React.createElement(Button, {\n      secureTextEntry: true,\n      title: \"Register\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\"\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","NavigationContainer","createStackNavigator","Yup","useDispatch","createUser","Background","Logo","Register","id","userName","email","password","passwordConfirmation","isValid","navigation","dispatch","styles","loginContainer","object","string","min","max","required","matches","oneOf","ref","values","action","resetForm","then","response","navigate","handleChange","handleSubmit","errors","textInput","name","fontSize","color","StyleSheet","create","width","alignItems","backgroundColor","padding","elevation","height","margin","borderColor","borderWidth","hairlineWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TextInput,\n  Button,\n  SafeAreaView,\n} from \"react-native\";\nimport { Formik, Form, Field } from \"formik\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport * as Yup from \"yup\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { createUser } from \"../store/actions/userActions\";\n\nimport Background from \"../components/Background\";\nimport Logo from '../components/Logo';\n\n\nconst Register = ({\n  id,\n  userName,\n  email,\n  password,\n  passwordConfirmation,\n  isValid,\n  navigation\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Background>\n\n       <Logo />\n\n      <View style={styles.loginContainer}>\n        <Formik\n          initialValues={{\n            userName: \"\",\n            email: \"\",\n            password: \"\",\n            passwordConfirmation: \"\",\n          }}\n          validationSchema={Yup.object({\n            userName: Yup.string()\n              .min(4, \"Debe tener al menos 4 caracteres\")\n              .max(50, \"Debe tener 50 caracteres o menos\")\n              .required(\"Debes completar este campo\"),\n            email: Yup.string()\n              .email(\"Introduzca un email valido por favor\")\n              .required(\"Debes completar este campo\"),\n            password: Yup.string()\n              .required(\"Please Enter your password\")\n              .matches(\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n              ),\n            passwordConfirmation: Yup.string()\n              .oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\")\n              .required(\"Password confirm is required\"),\n          })}\n          onSubmit={(values, action) => {\n            action.resetForm();\n            dispatch(createUser(values)).then((response)=>{\n              navigation.navigate('RegisterModal');\n            });\n          }}\n        >\n          {({ handleChange, handleSubmit, values, errors }) => (\n            <View>\n              <TextInput\n                placeholder=\"userName\"\n                onChangeText={handleChange(\"userName\")}\n                style={styles.textInput}\n                value={values.userName}\n              />\n              {errors.name && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.name}\n                </Text>\n              )}\n              <TextInput\n                name=\"email\"\n                placeholder=\"email\"\n                onChangeText={handleChange(\"email\")}\n                style={styles.textInput}\n                value={values.email}\n                keyboardType=\"email-address\"\n              />\n              {errors.email && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.email}\n                </Text>\n              )}\n              <TextInput\n                name=\"password\"\n                placeholder=\"Password\"\n                onChangeText={handleChange(\"password\")}\n                style={styles.textInput}\n                value={values.password}\n                secureTextEntry={true}\n              />\n              {errors.password && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.password}\n                </Text>\n              )}\n              <TextInput\n                name=\"passwordConfirmation\"\n                placeholder=\"Confirm password\"\n                onChangeText={handleChange(\"passwordConfirmation\")}\n                style={styles.textInput}\n                value={values.passwordConfirmation}\n                secureTextEntry={true}\n              />\n              {errors.passwordConfirmation && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.passwordConfirmation}\n                </Text>\n              )}\n              <Button\n                secureTextEntry={true}\n                title=\"Register\"\n                onPress={handleSubmit}\n              />\n            </View>\n          )}\n        </Formik>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  loginContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\",\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10,\n  },\n});\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}