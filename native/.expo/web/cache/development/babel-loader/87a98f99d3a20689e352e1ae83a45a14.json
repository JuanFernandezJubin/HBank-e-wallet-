{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Martin\\\\Documents\\\\GitHub\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { createUser } from \"../store/actions/userActions\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      email = _ref.email,\n      password = _ref.password;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: name,\n      email: email,\n      password: password\n    },\n    onSubmit: function _callee(values, _ref2) {\n      var setSubmitting, resetForm;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n              dispatch(createUser(values)).then(function (response) {\n                resetForm();\n                setSubmitting(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"name\",\n      onChangeText: handleChange('name'),\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      value: values.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"email\",\n      onChangeText: handleChange('email'),\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"password\",\n      onChangeText: handleChange('password'),\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }), React.createElement(Button, {\n      secureTextEntry: true,\n      title: \"Register\",\n      color: \"#841584\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  text: {\n    fontSize: 42\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/Users/Martin/Documents/GitHub/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","useDispatch","createUser","Register","id","name","email","password","dispatch","values","setSubmitting","resetForm","then","response","handleChange","handleSubmit","height","borderColor","borderWidth","styles","StyleSheet","create","container","flex","marginTop","scrollView","backgroundColor","marginHorizontal","text","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, TextInput, Button, SafeAreaView } from 'react-native';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createUser } from '../store/actions/userActions';\r\n\r\nconst Register = ({ id, name, email, password }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\r\n\t\t\t\t\tdispatch(createUser(values)).then((response) => {\r\n\t\t\t\t\t\tresetForm();\r\n\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({ handleChange, handleSubmit, values }) => (\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<TextInput placeholder='name' onChangeText={handleChange('name')} style={{ height: 40, borderColor: 'gray', borderWidth: 1 }} value={values.name} />\r\n\t\t\t\t\t\t<TextInput placeholder='email' onChangeText={handleChange('email')} style={{ height: 40, borderColor: 'gray', borderWidth: 1 }} value={values.email} />\r\n\r\n\t\t\t\t\t\t<TextInput placeholder='password' onChangeText={handleChange('password')} style={{ height: 40, borderColor: 'gray', borderWidth: 1 }} value={values.password} />\r\n\t\t\t\t\t\t<Button secureTextEntry={true} title='Register' color='#841584' onPress={handleSubmit} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tmarginTop: 10,\r\n\t},\r\n\tscrollView: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmarginHorizontal: 20,\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: 42,\r\n\t},\r\n});\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}