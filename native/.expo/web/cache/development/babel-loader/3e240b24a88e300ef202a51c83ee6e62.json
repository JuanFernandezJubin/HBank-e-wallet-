{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\OTROS\\\\HenryFinal\\\\HenryBank\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      email = _ref.email,\n      password = _ref.password;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: name,\n      email: email,\n      password: password\n    },\n    onSubmit: function _callee(values, _ref2) {\n      var setSubmitting, resetForm;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n              dispatch(createUser(values)).then(function (response) {\n                resetForm();\n                setSubmitting(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"name\",\n      onChangeText: handleChange(\"name\"),\n      style: {\n        height: 40,\n        borderColor: \"gray\",\n        borderWidth: 1\n      },\n      value: values.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"email\",\n      onChangeText: handleChange(\"email\"),\n      style: {\n        height: 40,\n        borderColor: \"gray\",\n        borderWidth: 1\n      },\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"password\",\n      onChangeText: handleChange(\"password\"),\n      style: {\n        height: 40,\n        borderColor: \"gray\",\n        borderWidth: 1\n      },\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      secureTextEntry: true,\n      title: \"Register\",\n      color: \"#841584\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  scrollView: {\n    backgroundColor: \"white\",\n    marginHorizontal: 20\n  },\n  text: {\n    fontSize: 42\n  }\n});\nexport default Register;","map":{"version":3,"sources":["F:/OTROS/HenryFinal/HenryBank/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","useDispatch","createUser","Register","id","name","email","password","dispatch","values","setSubmitting","resetForm","then","response","handleChange","handleSubmit","height","borderColor","borderWidth","styles","StyleSheet","create","container","flex","marginTop","scrollView","backgroundColor","marginHorizontal","text","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  TextInput,\r\n  Button,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { createUser } from \"../store/actions/userActions\";\r\n\r\nconst Register = ({ id, name,email, password }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <View>\r\n      <Formik\r\n        initialValues={{\r\n          name,\r\n          email,\r\n          password,\r\n        }}\r\n        onSubmit={async(values, { setSubmitting, resetForm }) => {\r\n          dispatch(createUser(values)).then((response) => {\r\n            resetForm();\r\n            setSubmitting(false);\r\n          });\r\n        }}\r\n      >\r\n        {({handleChange, handleSubmit, values }) => (\r\n          <View>\r\n            <TextInput\r\n              placeholder=\"name\"\r\n              onChangeText={handleChange(\"name\")}\r\n              style={{ height: 40, borderColor: \"gray\", borderWidth: 1 }}\r\n              value={values.name}\r\n            />\r\n            <TextInput\r\n              placeholder=\"email\"\r\n              onChangeText={handleChange(\"email\")}\r\n              style={{ height: 40, borderColor: \"gray\", borderWidth: 1 }}\r\n              value={values.email}\r\n            />\r\n\r\n            <TextInput\r\n              placeholder=\"password\"\r\n              onChangeText={handleChange(\"password\")}\r\n              style={{ height: 40, borderColor: \"gray\", borderWidth: 1 }}\r\n              value={values.password}\r\n            />\r\n            <Button\r\n              secureTextEntry={true}\r\n              title=\"Register\"\r\n              color=\"#841584\"\r\n              onPress={handleSubmit}\r\n            />\r\n          </View>\r\n        )}\r\n      </Formik>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n  },\r\n  scrollView: {\r\n    backgroundColor: \"white\",\r\n    marginHorizontal: 20,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n});\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}