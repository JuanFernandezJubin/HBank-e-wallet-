{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/olivert/ORLJ/Henry/HenryBank/HenryBanks/native/screens/Register.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View, Text, Form, Item, Label, Input, Picker, Button } from 'native-base';\nimport * as Font from 'expo-font';\nimport { useFormik } from 'formik';\n\nfunction Register() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  var _useFormik = useFormik({\n    initialValues: {\n      tipoDoc: '',\n      dni: '',\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      address: ''\n    },\n    onSubmit: function onSubmit(values) {},\n    validate: function validate(values) {\n      var errors = {};\n      if (!values.name || values.name.length < 2) errors.name = \"Campo Invalido\";\n      if (!values.phone || values.phone.length < 8) errors.phone = \"Telefono Invalido\";\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    }\n  }),\n      values = _useFormik.values,\n      isSubmitting = _useFormik.isSubmitting,\n      setFieldValue = _useFormik.setFieldValue,\n      handleSubmit = _useFormik.handleSubmit,\n      errors = _useFormik.errors;\n\n  useEffect(function () {\n    if (!fontsLoaded) {\n      loadFonts();\n    }\n  });\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              'roboto-light': require(\"../assets/fonts/Roboto-Light.ttf\")\n            }));\n\n          case 2:\n            setFontsLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!fontsLoaded) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Tipo de Documento\"), React.createElement(Picker, {\n    onValueChange: function onValueChange(value) {\n      return setFieldValue('country', value);\n    },\n    selectedValue: values.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"DNI\",\n    value: \"DNI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Pasaporte\",\n    value: \"Pasaporte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }))), React.createElement(Item, {\n    error: errors.name ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Nombre\"), React.createElement(Input, {\n    value: values.name,\n    onChangeText: function onChangeText(text) {\n      return setFieldValue('name', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, errors.name ? errors.name : '')), React.createElement(Item, {\n    error: errors.name ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Apellidos\"), React.createElement(Input, {\n    value: values.lastName,\n    onChangeText: function onChangeText(text) {\n      return setFieldValue('firstName', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, errors.name ? errors.name : '')), React.createElement(Item, {\n    error: errors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Email\"), React.createElement(Input, {\n    value: values.email,\n    onChangeText: function onChangeText(text) {\n      return setFieldValue('email', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, errors.email ? errors.email : '')), React.createElement(Item, {\n    error: errors.phone ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Phone\"), React.createElement(Input, {\n    value: values.phone,\n    onChangeText: function onChangeText(text) {\n      return setFieldValue('phone', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, errors.phone ? errors.phone : '')), React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Country\"), React.createElement(Picker, {\n    onValueChange: function onValueChange(value) {\n      return setFieldValue('country', value);\n    },\n    selectedValue: values.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Argentina\",\n    value: \"Argentina\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Uruguay\",\n    value: \"Uruguay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Colombia\",\n    value: \"Colombia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Mexixo\",\n    value: \"Mexixo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }))), React.createElement(Button, {\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n}\n\nexport default Register;","map":{"version":3,"sources":["/media/olivert/ORLJ/Henry/HenryBank/HenryBanks/native/screens/Register.js"],"names":["React","useEffect","useState","View","Text","Form","Item","Label","Input","Picker","Button","Font","useFormik","Register","fontsLoaded","setFontsLoaded","initialValues","tipoDoc","dni","name","lastName","email","phone","address","onSubmit","values","validate","errors","length","test","isSubmitting","setFieldValue","handleSubmit","loadFonts","loadAsync","require","value","country","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,MAAvD,QAAqE,aAArE;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA,kBAEsBX,QAAQ,CAAC,KAAD,CAF9B;AAAA;AAAA,MAETY,WAFS;AAAA,MAEIC,cAFJ;;AAAA,mBAIsDH,SAAS,CAAC;AAC5EI,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAE,EADI;AAEbC,MAAAA,GAAG,EAAE,EAFQ;AAGbC,MAAAA,IAAI,EAAE,EAHO;AAIbC,MAAAA,QAAQ,EAAE,EAJG;AAKbC,MAAAA,KAAK,EAAE,EALM;AAMbC,MAAAA,KAAK,EAAE,EANM;AAObC,MAAAA,OAAO,EAAE;AAPI,KAD6D;AAU3EC,IAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI,CAEnB,CAZ0E;AAa3EC,IAAAA,QAAQ,EAAE,kBAAAD,MAAM,EAAI;AAChB,UAAME,MAAM,GAAG,EAAf;AACA,UAAG,CAACF,MAAM,CAACN,IAAR,IAAgBM,MAAM,CAACN,IAAP,CAAYS,MAAZ,GAAqB,CAAxC,EAA2CD,MAAM,CAACR,IAAP,GAAa,gBAAb;AAC3C,UAAG,CAACM,MAAM,CAACH,KAAR,IAAiBG,MAAM,CAACH,KAAP,CAAaM,MAAb,GAAsB,CAA1C,EAA6CD,MAAM,CAACL,KAAP,GAAc,mBAAd;;AAC7C,UAAI,CAACG,MAAM,CAACJ,KAAZ,EAAmB;AAChBM,QAAAA,MAAM,CAACN,KAAP,GAAe,UAAf;AACD,OAFF,MAEQ,IAAI,CAAC,4CAA4CQ,IAA5C,CAAiDJ,MAAM,CAACJ,KAAxD,CAAL,EAAqE;AAC1EM,QAAAA,MAAM,CAACN,KAAP,GAAe,uBAAf;AACD;;AACF,aAAOM,MAAP;AACH;AAvB0E,GAAD,CAJ/D;AAAA,MAIRF,MAJQ,cAIRA,MAJQ;AAAA,MAIAK,YAJA,cAIAA,YAJA;AAAA,MAIcC,aAJd,cAIcA,aAJd;AAAA,MAI6BC,YAJ7B,cAI6BA,YAJ7B;AAAA,MAI2CL,MAJ3C,cAI2CA,MAJ3C;;AA8BhB1B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACa,WAAJ,EAAgB;AACZmB,MAAAA,SAAS;AACZ;AACJ,GAJQ,CAAT;;AAMA,MAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRtB,IAAI,CAACuB,SAAL,CAAe;AACjB,8BAAgBC,OAAO;AADN,aAAf,CADQ;;AAAA;AAIdpB,YAAAA,cAAc,CAAC,IAAD,CAAd;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAOA,MAAI,CAACD,WAAL,EAAkB;AACd,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AACD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE,uBAAAsB,KAAK;AAAA,aAAIL,aAAa,CAAC,SAAD,EAAYK,KAAZ,CAAjB;AAAA,KAA5B;AAAiE,IAAA,aAAa,EAAEX,MAAM,CAACY,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACR,IAAP,GAAc,IAAd,GAAqB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEM,MAAM,CAACN,IAArB;AAA2B,IAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,aAAIP,aAAa,CAAC,MAAD,EAASO,IAAT,CAAjB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACR,IAAP,GAAcQ,MAAM,CAACR,IAArB,GAA4B,EAAnC,CAHJ,CARJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACR,IAAP,GAAc,IAAd,GAAqB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEM,MAAM,CAACL,QAArB;AAA+B,IAAA,YAAY,EAAE,sBAAAkB,IAAI;AAAA,aAAIP,aAAa,CAAC,WAAD,EAAcO,IAAd,CAAjB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACR,IAAP,GAAcQ,MAAM,CAACR,IAArB,GAA4B,EAAnC,CAHJ,CAbJ,EAkBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACN,KAAP,GAAe,IAAf,GAAsB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,MAAM,CAACJ,KAArB;AAA4B,IAAA,YAAY,EAAE,sBAAAiB,IAAI;AAAA,aAAIP,aAAa,CAAC,OAAD,EAAUO,IAAV,CAAjB;AAAA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACN,KAAP,GAAeM,MAAM,CAACN,KAAtB,GAA8B,EAArC,CAHJ,CAlBJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACL,KAAP,GAAe,IAAf,GAAsB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,MAAM,CAACH,KAArB;AAA4B,IAAA,YAAY,EAAE,sBAAAgB,IAAI;AAAA,aAAIP,aAAa,CAAC,OAAD,EAAUO,IAAV,CAAjB;AAAA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACL,KAAP,GAAeK,MAAM,CAACL,KAAtB,GAA8B,EAArC,CAHJ,CAvBJ,EA4BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE,uBAAAc,KAAK;AAAA,aAAIL,aAAa,CAAC,SAAD,EAAYK,KAAZ,CAAjB;AAAA,KAA5B;AAAiE,IAAA,aAAa,EAAEX,MAAM,CAACY,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,CA5BJ,EAqCI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CArCJ,CADJ,CADJ;AA6CH;;AAED,eAAenB,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet } from \"react-native\";\nimport { View, Text, Form, Item, Label, Input, Picker, Button } from 'native-base'\nimport * as Font from 'expo-font';\nimport { useFormik } from 'formik';\n\nfunction Register() {\n\n    const [fontsLoaded, setFontsLoaded] = useState(false);\n\n    const { values, isSubmitting, setFieldValue, handleSubmit, errors } = useFormik({ //Destructuring de formik\n        initialValues: {\n          tipoDoc: '', \n          dni: '', \n          name: '',\n          lastName: '',          \n          email: '',\n          phone: '',\n          address: '',\n         },\n         onSubmit: values => {\n            //Enviar los valores a la BD\n         },\n         validate: values => {\n             const errors = {};\n             if(!values.name || values.name.length < 2) errors.name= \"Campo Invalido\";\n             if(!values.phone || values.phone.length < 8) errors.phone= \"Telefono Invalido\";\n             if (!values.email) {\n                errors.email = 'Required';\n              } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n              }\n             return errors;\n         },\n        });\n\n    useEffect(() => {\n        if(!fontsLoaded){\n            loadFonts();\n        }\n    });\n\n    const loadFonts = async () => {\n        await Font.loadAsync({\n            'roboto-light': require('../assets/fonts/Roboto-Light.ttf'),\n        });\n        setFontsLoaded(true);\n    }\n\n    if (!fontsLoaded) {\n        return(<View/>)\n        \n    }\n    return (\n        <View>\n            <Form>\n                <Item>\n                    <Label>Tipo de Documento</Label>\n                    <Picker onValueChange={value => setFieldValue('country', value)} selectedValue={values.country}>\n                        <Picker.Item label=\"DNI\" value=\"DNI\"/>\n                        <Picker.Item label=\"Pasaporte\" value=\"Pasaporte\"/>\n                    </Picker>\n                </Item>\n                <Item error={errors.name ? true : false}>\n                    <Label>Nombre</Label>\n                    <Input value={values.name} onChangeText={text => setFieldValue('name', text)}/>\n                    <Text>{errors.name ? errors.name : ''}</Text>\n                </Item>\n                <Item error={errors.name ? true : false}>\n                    <Label>Apellidos</Label>\n                    <Input value={values.lastName} onChangeText={text => setFieldValue('firstName', text)}/>\n                    <Text>{errors.name ? errors.name : ''}</Text>\n                </Item>\n                <Item error={errors.email ? true : false}>\n                    <Label>Email</Label>\n                    <Input value={values.email} onChangeText={text => setFieldValue('email', text)}/>\n                    <Text>{errors.email ? errors.email : ''}</Text>\n                </Item>\n                <Item error={errors.phone ? true : false}>\n                    <Label>Phone</Label>\n                    <Input value={values.phone} onChangeText={text => setFieldValue('phone', text)}/>\n                    <Text>{errors.phone ? errors.phone : ''}</Text>\n                </Item>\n                <Item>\n                    <Label>Country</Label>\n                    <Picker onValueChange={value => setFieldValue('country', value)} selectedValue={values.country}>\n                        <Picker.Item label=\"Argentina\" value=\"Argentina\"/>\n                        <Picker.Item label=\"Uruguay\" value=\"Uruguay\"/>\n                        <Picker.Item label=\"Colombia\" value=\"Colombia\"/>\n                        <Picker.Item label=\"Mexixo\" value=\"Mexixo\"/>\n                    </Picker>\n                </Item>\n                <Button onPress={handleSubmit}>\n                    <Text>Enviar</Text>\n                </Button>\n            </Form>\n        </View>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}