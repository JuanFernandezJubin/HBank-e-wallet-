{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\Register.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik, Form, Field } from \"formik\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../store/actions/userActions\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport CustomInput from \"../components/CustomInput\";\nimport { theme } from \"../core/theme\";\n\nvar Register = function Register(_ref) {\n  var id = _ref.id,\n      userName = _ref.userName,\n      email = _ref.email,\n      password = _ref.password,\n      passwordConfirmation = _ref.passwordConfirmation,\n      isValid = _ref.isValid,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    },\n    validationSchema: Yup.object({\n      userName: Yup.string().min(4, \"Debe tener al menos 4 caracteres\").max(50, \"Debe tener 50 caracteres o menos\").required(\"Debes completar este campo\"),\n      email: Yup.string().email(\"Introduzca un email valido por favor\").required(\"Debes completar este campo\"),\n      password: Yup.string().required(\"Please Enter your password\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\").required(\"Password confirm is required\")\n    }),\n    onSubmit: function onSubmit(values, action) {\n      action.resetForm();\n      dispatch(createUser(values));\n      navigation.navigate(\"RegisterModal\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, React.createElement(CustomInput, {\n      label: \"Username\",\n      onChangeText: handleChange(\"userName\"),\n      value: values.userName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), errors.name && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(CustomInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      onChangeText: handleChange(\"email\"),\n      value: values.email,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, errors.email), React.createElement(CustomInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      onChangeText: handleChange(\"password\"),\n      value: values.password,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, errors.password), React.createElement(CustomInput, {\n      name: \"passwordConfirmation\",\n      placeholder: \"Confirm password\",\n      onChangeText: handleChange(\"passwordConfirmation\"),\n      style: styles.textInput,\n      value: values.passwordConfirmation,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }), errors.passwordConfirmation && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, errors.passwordConfirmation), React.createElement(Button, {\n      mode: \"contained\",\n      secureTextEntry: true,\n      title: \"Register\",\n      style: styles.button,\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"LoginScreen\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, \"Login\"))));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/Register.js"],"names":["React","useState","Formik","Form","Field","NavigationContainer","createStackNavigator","Yup","useDispatch","createUser","Background","Logo","Header","CustomInput","theme","Register","id","userName","email","password","passwordConfirmation","isValid","navigation","dispatch","styles","loginContainer","object","string","min","max","required","matches","oneOf","ref","values","action","resetForm","navigate","handleChange","handleSubmit","errors","name","fontSize","color","textInput","button","row","label","link","StyleSheet","create","colors","secondary","marginTop","flexDirection","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Formik, Form, Field } from \"formik\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport * as Yup from \"yup\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { createUser } from \"../store/actions/userActions\";\n\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport CustomInput from \"../components/CustomInput\";\nimport { theme } from '../core/theme';\n\nconst Register = ({\n  id,\n  userName,\n  email,\n  password,\n  passwordConfirmation,\n  isValid,\n  navigation,\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Background>\n      <Logo />\n\n      <Header>Create Account</Header>\n\n      <View style={styles.loginContainer}>\n        <Formik\n          initialValues={{\n            userName: \"\",\n            email: \"\",\n            password: \"\",\n            passwordConfirmation: \"\",\n          }}\n          validationSchema={Yup.object({\n            userName: Yup.string()\n              .min(4, \"Debe tener al menos 4 caracteres\")\n              .max(50, \"Debe tener 50 caracteres o menos\")\n              .required(\"Debes completar este campo\"),\n            email: Yup.string()\n              .email(\"Introduzca un email valido por favor\")\n              .required(\"Debes completar este campo\"),\n            password: Yup.string()\n              .required(\"Please Enter your password\")\n              .matches(\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n              ),\n            passwordConfirmation: Yup.string()\n              .oneOf([Yup.ref(\"password\"), null], \"La contrase√±a no coincide\")\n              .required(\"Password confirm is required\"),\n          })}\n          onSubmit={(values, action) => {\n            action.resetForm();\n            dispatch(createUser(values));\n            navigation.navigate(\"RegisterModal\");\n          }}\n        >\n          {({ handleChange, handleSubmit, values, errors }) => (\n            <View>\n              <CustomInput\n                label=\"Username\"\n                onChangeText={handleChange(\"userName\")}\n                value={values.userName}\n              />\n              {errors.name && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.name}\n                </Text>\n              )}\n              <CustomInput\n                label=\"Email\"\n                returnKeyType=\"next\"\n                onChangeText={handleChange(\"email\")}\n                value={values.email}\n                autoCapitalize=\"none\"\n                autoCompleteType=\"email\"\n                textContentType=\"emailAddress\"\n                keyboardType=\"email-address\"\n              />\n              {errors.email && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.email}\n                </Text>\n              )}\n              <CustomInput\n                label=\"Password\"\n                returnKeyType=\"done\"\n                onChangeText={handleChange(\"password\")}\n                value={values.password}\n                secureTextEntry={true}\n              />\n              {errors.password && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.password}\n                </Text>\n              )}\n              <CustomInput\n                name=\"passwordConfirmation\"\n                placeholder=\"Confirm password\"\n                onChangeText={handleChange(\"passwordConfirmation\")}\n                style={styles.textInput}\n                value={values.passwordConfirmation}\n                secureTextEntry={true}\n              />\n              {errors.passwordConfirmation && (\n                <Text style={{ fontSize: 10, color: \"red\" }}>\n                  {errors.passwordConfirmation}\n                </Text>\n              )}\n              <Button\n                mode=\"contained\"\n                secureTextEntry={true}\n                title=\"Register\"\n                style={styles.button}\n                onPress={handleSubmit}\n              />\n\n              <View style={styles.row}>\n                <Text style={styles.label}>Already have an account? </Text>\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"LoginScreen\")}\n                >\n                  <Text style={styles.link}>Login</Text>\n                </TouchableOpacity>\n              </View>\n\n            </View>\n          )}\n        </Formik>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary,\n  },\n  button: {\n    marginTop: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}