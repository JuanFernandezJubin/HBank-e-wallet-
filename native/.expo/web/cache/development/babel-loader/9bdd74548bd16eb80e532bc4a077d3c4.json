{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp\\\\www\\\\Henry\\\\HenryBanks\\\\native\\\\screens\\\\FAQ.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Link } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nfunction Accordian(_ref) {\n  var title = _ref.title,\n      data = _ref.data;\n\n  var _React$useState = React.useState({\n    data: data,\n    expanded: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  function toggleExpand() {\n    state.expanded ? setState({\n      expanded: false\n    }) : setState({\n      expanded: true\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleExpand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, title), React.createElement(Icon, {\n    name: state.expanded ? \"angle-up\" : \"angle-down\",\n    color: \"#422C63\",\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }))), state.expanded ? React.createElement(View, {\n    style: styles.child,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 60\n    }\n  }, data)) : null));\n}\n\nexport default function FAQ() {\n  function renderAccordians() {\n    var _this = this;\n\n    var items = [];\n    faqText.map(function (i) {\n      items.push(React.createElement(Accordian, {\n        title: i.title,\n        data: i.data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }));\n    });\n    return items;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 1,\n      y: 1\n    },\n    colors: ['#DA9FD9', '#423867'],\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Link, {\n    to: \"/Welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"angle-left\",\n    color: \"#422C63\",\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 40\n    }\n  }, \"Olvide mi usuario, click aqui \", React.createElement(Icon, {\n    name: \"envelope-square\",\n    color: \"#422C63\",\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 97\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Olvide mi contrase\\xF1a, click aqui \", React.createElement(Icon, {\n    name: \"key\",\n    color: \"#422C63\",\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 75\n    }\n  }))), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, renderAccordians())));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    flex: 1,\n    paddingTop: 10,\n    justifyContent: 'space-between'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  child: {\n    backgroundColor: '#EEDCEE',\n    padding: 16\n  },\n  data: {\n    fontSize: 16,\n    color: 'grey'\n  }\n});\nvar faqText = [{\n  title: '¿En cuánto tiempo verifican mi cuenta bancaria?',\n  data: ' Ni bien ingreses tus datos, el tiempo de verificación de la cuenta bancaria es de 24 horas hábiles.'\n}, {\n  title: '¿Es necesario vincular la cuenta bancaria para hacer un depósito?',\n  data: 'Para hacer un depósito de saldo en tu cuenta no necesitas agregar una cuenta bancaria. Tenés otros métodos de fondeo: podes depositar por Mercado Pago o depositar en efectivo por Rapipago y PagoFacil'\n}, {\n  title: '¿Qué necesito para crear una cuenta?',\n  data: 'Documento de identidad físico (Permanente o temporal). Teléfono celular a la mano. En caso de no contar con cámara en el dispositivo, debes tomar: Una foto en formato .jpg del documento de identidad (sin flash, y con datos legibles). Una selfie tuya en formato .jpg (la capacidad de estas fotos no debe superar los 2MB).'\n}, {\n  title: 'Comisiones por operaciones',\n  data: 'Todas las operaciones son gratuitas'\n}, {\n  title: '¿Cómo protegerte de las estafas online?',\n  data: 'Muchas ofertas que se presentan como negocios son en realidad estafas, tené cuidado de no ser víctima de fraude informático.Cuidate de las ofertas de negocios con ingresos rápidos y elevados. Si suena demasiado bueno para ser cierto, en general es porque es una estafa. Nunca permitas a terceros el uso de tu cuenta.'\n}];","map":{"version":3,"sources":["C:/wamp/www/Henry/HenryBanks/native/screens/FAQ.js"],"names":["React","Link","LinearGradient","Icon","Accordian","title","data","useState","expanded","state","setState","toggleExpand","styles","container","row","child","FAQ","renderAccordians","items","faqText","map","i","push","x","y","flex","marginTop","StyleSheet","create","backgroundColor","paddingTop","justifyContent","flexDirection","fontSize","fontWeight","color","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {View, Text, ScrollView, StyleSheet, TouchableOpacity, ImageBackground} from 'react-native';\nimport { Link } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nfunction Accordian({title, data}) {\n  const [state, setState]= React.useState({\n    data: data,\n    expanded: false\n  })\n\n  function toggleExpand(){\n    state.expanded ? setState({expanded: false}) : setState({expanded: true})\n  }\n\n    return (\n        <View style={styles.container}>\n\n            <View>\n              <TouchableOpacity onPress={toggleExpand}>\n                <View style={styles.row}>\n                <Text style={styles.title}>{title}</Text>\n                <Icon name={state.expanded? \"angle-up\":\"angle-down\"} color=\"#422C63\" size={25} />\n                </View>\n              </TouchableOpacity>\n              {state.expanded ? <View style={styles.child}><Text style={styles.data}>{data}</Text></View> : null}\n            </View>\n\n        </View>\n    )\n}\nexport default function FAQ(){\n    function renderAccordians(){\n      const items = [];\n      faqText.map(i => {\n          items.push(\n              <Accordian\n                  title = {i.title}\n                  data = {i.data}\n              />\n          );\n      })\n      return items;\n    }\n      return (\n      <View style={styles.container}>\n      <LinearGradient\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        colors={['#DA9FD9',  '#423867']}\n        style={{flex: 1}}\n      >\n                <View>\n                <Link to=\"/Welcome\">\n                <Icon name=\"angle-left\" color=\"#422C63\" size={50} /></Link>\n                </View>\n        <View style={{marginTop: 30,}}><Text style={styles.title}>Olvide mi usuario, click aqui <Icon name=\"envelope-square\" color=\"#422C63\" size={25} /></Text></View>\n        <View><Text style={styles.title}>Olvide mi contraseña, click aqui <Icon name=\"key\" color=\"#422C63\" size={25} /></Text></View>\n        <ScrollView>\n        { renderAccordians() }\n        </ScrollView>\n         </LinearGradient>\n      </View>\n    );\n  }\n\n\n\n\nconst styles = StyleSheet.create({\n  container:{\n    backgroundColor: 'transparent',\n    flex: 1,\n    paddingTop :10,\n    justifyContent:'space-between'\n  },\n  row:{\n    flexDirection:'row'\n  },\n  title:{\n       fontSize: 16,\n       fontWeight:'bold',\n       color: 'white',\n   },\n   child:{\n         backgroundColor: '#EEDCEE',\n         padding:16,\n   },\n   data:{\n        fontSize: 16,\n        color: 'grey',\n    },\n});\nconst faqText=[\n  {title: '¿En cuánto tiempo verifican mi cuenta bancaria?',\n    data: ' Ni bien ingreses tus datos, el tiempo de verificación de la cuenta bancaria es de 24 horas hábiles.'\n  },\n  {title: '¿Es necesario vincular la cuenta bancaria para hacer un depósito?',\n    data: 'Para hacer un depósito de saldo en tu cuenta no necesitas agregar una cuenta bancaria. Tenés otros métodos de fondeo: podes depositar por Mercado Pago o depositar en efectivo por Rapipago y PagoFacil'\n  },\n  {title: '¿Qué necesito para crear una cuenta?',\n    data: 'Documento de identidad físico (Permanente o temporal). Teléfono celular a la mano. En caso de no contar con cámara en el dispositivo, debes tomar: Una foto en formato .jpg del documento de identidad (sin flash, y con datos legibles). Una selfie tuya en formato .jpg (la capacidad de estas fotos no debe superar los 2MB).'\n  },\n  {title: 'Comisiones por operaciones',\n    data: 'Todas las operaciones son gratuitas'\n  },\n  {title: '¿Cómo protegerte de las estafas online?',\n    data: 'Muchas ofertas que se presentan como negocios son en realidad estafas, tené cuidado de no ser víctima de fraude informático.Cuidate de las ofertas de negocios con ingresos rápidos y elevados. Si suena demasiado bueno para ser cierto, en general es porque es una estafa. Nunca permitas a terceros el uso de tu cuenta.'\n  },\n]\n"]},"metadata":{},"sourceType":"module"}